// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Next Auth

model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    password      String?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Custom Models

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Enquiry {
    id        Int      @id @default(autoincrement())
    name      String
    email     String
    message   String?  @db.Text
    createdAt DateTime @default(now())
}

model Category {
    id       Int       @id @default(autoincrement())
    name     String
    products Product[]
}

model Image {
    id        Int      @id @default(autoincrement())
    path      String
    product   Product? @relation(fields: [productId], references: [id])
    productId Int?
}

model Product {
    id          Int       @id @default(autoincrement())
    name        String
    description String?
    images      Image[]
    category    Category? @relation(fields: [categoryid], references: [id])
    categoryid  Int?
    createdAt   DateTime  @default(now())
}

model Slider {
    id          Int      @id @default(autoincrement())
    title       String
    description String?
    image       String
    createdAt   DateTime @default(now())
}
